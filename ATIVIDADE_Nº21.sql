DROP DATABASE if exists DBCARTAOCREDITO;



CREATE DATABASE DBCARTAOCREDITO;



USE DBCARTAOCREDITO;



CREATE TABLE CLIENTE (
IDCLIENTE INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
NOME VARCHAR(100) NOT NULL,
CPF CHAR(11) NOT NULL,
RG VARCHAR(16),
LOGRADOURO VARCHAR(100),
NUMERO VARCHAR(10),
BAIRRO VARCHAR(100),
CIDADE VARCHAR(100),
UF CHAR(2),
COMPLEMENTO VARCHAR(100),
DT_NASCIMENTO DATE,
TELEFONE_RESIDENCIAL VARCHAR(15),
TELEFONE_COMERCIAL VARCHAR(15),
TELEFONE_RECADO VARCHAR(15)
);
CREATE TABLE CARTAO (
IDCARTAO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
IDCLIENTE INT NOT NULL,
NUMERO CHAR(20) NOT NULL,
DIA_VENCIMENTO INT NOT NULL,
LIMITE NUMERIC(8,2),
CONSTRAINT FK_CARTAO_CLIENTE FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTE(IDCLIENTE)
);



CREATE TABLE DEBITO (
IDDEBITO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
IDCARTAO INT NOT NULL,
DESCRICAO VARCHAR(255) NOT NULL,
PARCELA INT,
VALOR NUMERIC(8,2) NOT NULL,
DT_DEBITO DATETIME,
CONSTRAINT FK_DEBITO_CARTAO FOREIGN KEY (IDCARTAO) REFERENCES CARTAO(IDCARTAO)
);



CREATE TABLE BOLETO (
IDBOLETO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
IDCARTAO INT NOT NULL,
DT_GERACAO INT NOT NULL,
DT_VENCIMENTO DATE NOT NULL,
VALOR_TOTAL NUMERIC(8,2) NOT NULL,
DT_PAGAMENTO DATE,
VALOR_PAGO NUMERIC(8,2),
CONSTRAINT FK_BOLETO_CLIENTE FOREIGN KEY (IDCARTAO) REFERENCES CARTAO(IDCARTAO)
);




CREATE TABLE ITEM_BOLETO (
IDITEM_BOLETO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
IDBOLETO INT NOT NULL,
IDDEBITO INT NOT NULL,
CONSTRAINT FK_ITEM_BOLETO_BOLETO FOREIGN KEY (IDBOLETO) REFERENCES BOLETO(IDBOLETO),
CONSTRAINT FK_ITEM_BOLETO_DEBITO FOREIGN KEY (IDDEBITO) REFERENCES DEBITO(IDDEBITO)
);



DELIMITER $$
CREATE PROCEDURE STP_CRIAR_CLIENTE_E_CARTAO(NOME VARCHAR(100), CPF CHAR(11))
BEGIN



INSERT INTO CLIENTE (nome, cpf) VALUES (NOME, CPF);
INSERT INTO CARTAO VALUES (DEFAULT,LAST_INSERT_ID(),CONCAT(CPF,LPAD(LAST_INSERT_ID(), 9, 0)),DAY(NOW()),2000);



END $$
DELIMITER ;



CREATE VIEW vTOTAL_DEBITO AS
SELECT
CARTAO.IDCARTAO AS ID,
(CARTAO.LIMITE - sum(debito.valor)) as limites
from
DEBITO
RIGHT JOIN CARTAO ON
CARTAO.IDCARTAO = DEBITO.IDCARTAO;



DELIMITER $$
CREATE PROCEDURE STP_INSERIR_DEBITO(IDCARD int,descricao varchar(100),parcela int,valor decimal)
BEGIN



DECLARE vDEBITO DOUBLE;

SET vDEBITO = (SELECT limites FROM vTOTAL_DEBITO WHERE ID = IDCARD);

if ((select limites from vTOTAL_DEBITO where ID = IDCARD) > VALOR or (select limites from vTOTAL_DEBITO where ID = IDCARD) is null) then
INSERT INTO debito values (default, IDCARD,descricao,parcela,valor,now());
ELSE SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'SEU LIMITE FOI EXCEDIDO!';
end if;
END $$


CREATE PROCEDURE PR_GERAR_BOLETO(IDBOLETO INT, IDCARTAO INT, DT_GERACAO DATE, DT_VENCIMENTO DATE,VALOR_TOTAL NUMERIC(8,2),DT_PAGAMENTO DATE,VALOR_PAGO NUMERIC(8,2)) 
BEGIN

DECLARE vBOLETO DOUBLE;








END $$

DELIMITER ;





CALL STP_CRIAR_CLIENTE_E_CARTAO('thiago', '11481764977');
call STP_INSERIR_DEBITO(1,"Compra no shopee",4,125);
call STP_INSERIR_DEBITO(1,"Compra no shopee",1,150);



SELECT limites FROM vTOTAL_DEBITO WHERE ID = 1;



select * from cliente;
SELECT * FROM CARTAO;
SELECT * FROM DEBITO;